{
	"name": "Zuko",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include":"#blockcomment"
		},
		{
          "include": "#comment"
		},
		{
			"include": "#byte"
		},
		{
			"include": "#boolean"
		},
		{
			"include":"#nil"
		},
		{
			"include":"#special"
		},
		{
			"include":"#modifier"
		},
		{
          "include": "#identifier"
		},
		{
			"include":"#numeric"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.zuko",
				"match": "\\b(if|while|for|return|dowhile|foreach|else|throw|break|continue|yield)\\b"
			},
			{
				"name": "keyword.other.zuko",
				"match": "\\b(import|as|var|function|class|extends|namespace|try|catch)\\b"
			},
			{
				"name": "keyword.operator.zuko",
				"match": "\\b(and|or|is)\\b"
			}
		  ]
		},
		"numeric":
		{
			"name":"constant.numeric.zuko",
			"match":"\\d+(.\\d+(e\\d+)?)?"
		},
		"comment":{
			"name":"comment.line.zuko",
			"match": "#.*"
		},
		"special":
		{
			"name":"variable.language.zuko",
			"match":"\\b(self|Error|TypeError|ValueError|ArgumentError|IndexError|NameError|MathError|FileIOError|FileOpenError|FileSeekError|ImportError|ThrowError|AccessError|MaxRecursionError|OverflowError|KeyError)\\b"
		},
		"modifier":
		{
			"name":"storage.modifier",
            "match":"\\b(private|public)\\b"
		},
		"strings": {
			"name": "string.quoted.double.zuko",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.zuko",
					"match": "\\\\."
				}
			]
		},
        "boolean":{
			"name": "constant.language.zuko",
			"match": "\\b(true|false)\\b"
		},
		"nil":
		{
			"name":"constant.language.zuko",
			"match": "\\b(nil)\\b"
		},
		"byte":
		{
          "name":"constant.numeric.zuko",
		  "match":"0x[0-9a-fA-F]{2}"
		},
		"identifier":
		{
			"name": "source.zuko",
			"match": "[a-zA-Z_]+[A-Za-z0-9_]+"
		},
		"blockcomment":
		{
			"name": "comment.block.zuko",
			"begin": "#-",
			"end": "-#"

		}
	},
	"scopeName": "source.zk"
}